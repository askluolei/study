# module 这些模块的日志才会打印出来
modulelist=com.p6spy.engine.spy.P6SpyFactory,com.p6spy.engine.logging.P6LogFactory,com.p6spy.engine.outage.P6OutageFactory

# 被代理的驱动类列表
driverlist=org.h2.Driver, com.mysql.jdbc.Driver, net.sourceforge.jtds.jdbc.Driver, oracle.jdbc.driver.OracleDriver

# 自动刷新，就是每拦截一条sql就写到日志中
autoflush = true

# 日期格式 yyyy-MM-dd HH:mm:ss
dateformat=

# 打印每条sql 的堆栈
stacktrace=false
# 上面的配置为true，下面的列表中的类的堆栈才打印
stacktraceclass=

# 是否自己加载配置文件
reloadproperties=false
# 加载配置文件间隔，单位秒s，如果上面的配置为true
reloadpropertiesinterval=60

# appender 日志记录的位置
#appender=com.p6spy.engine.spy.appender.Slf4JLogger
appender=com.p6spy.engine.spy.appender.StdoutLogger
#appender=com.p6spy.engine.spy.appender.FileLogger

# 日志名字，只用在FileLogger
logfile = spy.log

# 追加日志
append=true

# 日志信息格式
logMessageFormat=com.p6spy.engine.spy.appender.SingleLineFormat

# 数据库方言日期格式
databaseDialectDateFormat=yyyy-MM-dd

# 配置参数到JMX
jmx=true

# JMX 的前缀 默认为null ，com.p6spy(.<jmxPrefix>)?:name=<optionsClassName>
#jmxPrefix=

#
#useNanoTime=false

# 实际的数据库连接池，默认是spy的连接池，这两个配置，一旦配置了，不会受配置文件的reload影响
#realdatasource=/RealMySqlDS
#realdatasourceclass=com.mysql.jdbc.jdbc2.optional.MysqlDataSource

# 数据库连接池需要的配置信息    key;value,key;value
#realdatasourceproperties=port;3306,serverName;myhost,databaseName;jbossdb,foo;bar


# JNDI 方式配置数据库连接池
#jndicontextfactory=org.jnp.interfaces.NamingContextFactory
#jndicontextproviderurl=localhost:1099
#jndicontextcustom=java.naming.factory.url.pkgs;org.jboss.nameing:org.jnp.interfaces

#jndicontextfactory=com.ibm.websphere.naming.WsnInitialContextFactory
#jndicontextproviderurl=iiop://localhost:900


# 是否开启日志拦截  include/exclude/sqlexpression  这3个配置受影响
#filter=false
# 满足关键字
#include =
# 排除关键字
#exclude =
# 正则表达式
#sqlexpression =

# 日志排除的类别  所有类别：error, info, batch, debug, statement, commit, rollback, result and resultset
excludecategories=info,debug,result,batch

# 二进制内容是否使用占位符记录
#excludebinary=false

# sql记录门槛 超过时间的sql才会被记录，默认是0，单位毫秒ms  类似慢查询日志
#executionThreshold=



